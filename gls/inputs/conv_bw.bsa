F1000101 00000013
# data[(15, 0)] : init `data1` reg with const `19`

FF000101 0002F00B
# data[ 5,  0] = 11 :: alu_op 'mult_0'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  0 :: data1  'const_b' (REG_CONST)

00020101 00000005
# data[(3, 0)] : @ tile (1, 1) connect wire 5 (out_BUS16_S2_T0) to data0

00080101 00200B02
# data[(1, 0)] : @ tile (1, 1) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S0_T0
# data[(9, 8)] : @ tile (1, 1) connect wire 3 (pe_out_res) to out_BUS16_S0_T4
# data[(11, 10)] : @ tile (1, 1) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0
# data[(21, 20)] : @ tile (1, 1) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S2_T0

01080101 00002000
# data[(45, 45)] : @ tile (1, 1) latch output wire out_BUS16_S1_T0

F1000102 0000000D
# data[(15, 0)] : init `data1` reg with const `13`

FF000102 0003F00B
# data[ 5,  0] = 11 :: alu_op 'mult_0'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  3 :: data0  'reg_a' (REG_DELAY)
# data[19, 18] =  0 :: data1  'const_b' (REG_CONST)

00020102 00000005
# data[(3, 0)] : @ tile (1, 2) connect wire 5 (out_BUS16_S2_T0) to data0

00080102 00143001
# data[(1, 0)] : @ tile (1, 2) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(13, 12)] : @ tile (1, 2) connect wire 3 (pe_out_res) to out_BUS16_S1_T1
# data[(19, 18)] : @ tile (1, 2) connect wire 1 (in_BUS16_S2_T4) to out_BUS16_S1_T4
# data[(21, 20)] : @ tile (1, 2) connect wire 1 (in_BUS16_S1_T0) to out_BUS16_S2_T0

F1000103 00000012
# data[(15, 0)] : init `data1` reg with const `18`

FF000103 0002F00B
# data[ 5,  0] = 11 :: alu_op 'mult_0'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  0 :: data1  'const_b' (REG_CONST)

00020103 00000006
# data[(3, 0)] : @ tile (1, 3) connect wire 6 (out_BUS16_S2_T1) to data0

00080103 00003001
# data[(1, 0)] : @ tile (1, 3) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(13, 12)] : @ tile (1, 3) connect wire 3 (pe_out_res) to out_BUS16_S1_T1
# data[(23, 22)] : @ tile (1, 3) connect wire 0 (in_BUS16_S0_T1) to out_BUS16_S2_T1

00000104 00000000
# data[(32, 30)] : @ tile (1, 4) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 00)
# da99[(31, 30)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

01000104 00000000
# data[(32, 30)] : @ tile (1, 4) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 01)
# da99[(32, 32)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

00010104 00C00C30
# data[(5, 4)] : @ tile (1, 4) connect wire 3 (rdata) to out_0_BUS16_S0_T2
# data[(11, 10)] : @ tile (1, 4) connect wire 3 (rdata) to out_0_BUS16_S1_T0
# data[(23, 22)] : @ tile (1, 4) connect wire 3 (rdata) to out_0_BUS16_S2_T1

01010104 00000400
# data[(42, 42)] : @ tile (1, 4) latch output wire out_0_BUS16_S0_T2

00020104 00000204
# data[(1, 0)] : mode = 0 (linebuffer)
# data[(2, 2)] : tile_en = 1
# data[(15, 3)] : fifo_depth = 64
# data[(18, 16)] : almost_full_count = 0
# data[(19, 19)] : chain_enable = 0

00090104 00000000
# data[(3, 0)] : @ tile (1, 4) connect wire 0 (in_0_BUS16_S2_T0) to wdata

000C0104 00000005
# data[(3, 0)] : @ tile (1, 4) connect wire 5 (out_0_BUS1_S2_T0) to wen

00000105 000000FF
# data[(7, 0)] : lut_value = 0xFF

F3000105 00000000
# data[(0, 0)] : init `bit0` reg with const `0`

F4000105 00000000
# data[(0, 0)] : init `bit1` reg with const `0`

F5000105 00000000
# data[(0, 0)] : init `bit2` reg with const `0`

FF000105 0000E00E
# data[(5, 0)] : alu_op = lut ; 0xE
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_LUT=0xE
# data[(25, 24)]: bit0: 'const_0' (REG_CONST)
# data[(27, 26)]: bit1: 'const_1' (REG_CONST)
# data[(29, 28)]: bit2: 'const_2' (REG_CONST)

00080105 00004010
# data[(5, 4)] : @ tile (1, 5) connect wire 1 (in_BUS16_S2_T2) to out_BUS16_S0_T2
# data[(15, 14)] : @ tile (1, 5) connect wire 1 (in_BUS16_S2_T2) to out_BUS16_S1_T2

00090105 00300000
# data[(21, 20)] : @ tile (1, 5) connect wire 3 (pe_out_res_p) to out_BUS1_S2_T0

00080106 00004000
# data[(15, 14)] : @ tile (1, 6) connect wire 1 (in_BUS16_S2_T2) to out_BUS16_S1_T2

00010110 00000000
# data[(1, 0)] : @ tile (1, 16) connect wire 0 (in_0_BUS16_S1_T0) to out_0_BUS16_S0_T0

FF000201 000AF000
# data[ 5,  0] =  0 :: alu_op 'add'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  2 :: data1  'wire_b' (REG_BYPASS)

00020201 00000007
# data[(3, 0)] : @ tile (2, 1) connect wire 7 (out_BUS16_S2_T2) to data0

00030201 00000003
# data[(3, 0)] : @ tile (2, 1) connect wire 3 (in_BUS16_S1_T3) to data1

00080201 00030802
# data[(1, 0)] : @ tile (2, 1) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S0_T0
# data[(11, 10)] : @ tile (2, 1) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0
# data[(17, 16)] : @ tile (2, 1) connect wire 3 (pe_out_res) to out_BUS16_S1_T3
# data[(25, 24)] : @ tile (2, 1) connect wire 0 (in_BUS16_S0_T2) to out_BUS16_S2_T2

FF000202 000AF000
# data[ 5,  0] =  0 :: alu_op 'add'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  2 :: data1  'wire_b' (REG_BYPASS)

00020202 00000006
# data[(3, 0)] : @ tile (2, 2) connect wire 6 (out_BUS16_S2_T1) to data0

00030202 00000007
# data[(3, 0)] : @ tile (2, 2) connect wire 7 (out_BUS16_S1_T2) to data1

00080202 83482000
# data[(13, 12)] : @ tile (2, 2) connect wire 2 (in_BUS16_S3_T1) to out_BUS16_S1_T1
# data[(15, 14)] : @ tile (2, 2) connect wire 0 (in_BUS16_S0_T2) to out_BUS16_S1_T2
# data[(19, 18)] : @ tile (2, 2) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S1_T4
# data[(23, 22)] : @ tile (2, 2) connect wire 1 (in_BUS16_S1_T1) to out_BUS16_S2_T1
# data[(25, 24)] : @ tile (2, 2) connect wire 3 (pe_out_res) to out_BUS16_S2_T2
# data[(31, 30)] : @ tile (2, 2) connect wire 2 (in_BUS16_S2_T0) to out_BUS16_S3_T0

00080203 00002000
# data[(13, 12)] : @ tile (2, 3) connect wire 2 (in_BUS16_S3_T1) to out_BUS16_S1_T1
# data[(25, 24)] : @ tile (2, 3) connect wire 0 (in_BUS16_S0_T2) to out_BUS16_S2_T2

00000204 00000000
# data[(32, 30)] : @ tile (2, 4) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 00)
# da99[(31, 30)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

01000204 00000000
# data[(32, 30)] : @ tile (2, 4) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 01)
# da99[(32, 32)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

00010204 00230300
# data[(9, 8)] : @ tile (2, 4) connect wire 3 (rdata) to out_0_BUS16_S0_T4
# data[(17, 16)] : @ tile (2, 4) connect wire 3 (rdata) to out_0_BUS16_S1_T3
# data[(21, 20)] : @ tile (2, 4) connect wire 2 (in_0_BUS16_S3_T0) to out_0_BUS16_S2_T0
# data[(25, 24)] : @ tile (2, 4) connect wire 0 (in_0_BUS16_S0_T2) to out_0_BUS16_S2_T2

01010204 00001000
# data[(44, 44)] : @ tile (2, 4) latch output wire out_0_BUS16_S0_T4

00020204 00000204
# data[(1, 0)] : mode = 0 (linebuffer)
# data[(2, 2)] : tile_en = 1
# data[(15, 3)] : fifo_depth = 64
# data[(18, 16)] : almost_full_count = 0
# data[(19, 19)] : chain_enable = 0

00090204 00000005
# data[(3, 0)] : @ tile (2, 4) connect wire 5 (out_0_BUS16_S2_T0) to wdata

000C0204 00000005
# data[(3, 0)] : @ tile (2, 4) connect wire 5 (out_0_BUS1_S2_T0) to wen

00000205 000000FF
# data[(7, 0)] : lut_value = 0xFF

F3000205 00000000
# data[(0, 0)] : init `bit0` reg with const `0`

F4000205 00000000
# data[(0, 0)] : init `bit1` reg with const `0`

F5000205 00000000
# data[(0, 0)] : init `bit2` reg with const `0`

FF000205 0000E00E
# data[(5, 0)] : alu_op = lut ; 0xE
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_LUT=0xE
# data[(25, 24)]: bit0: 'const_0' (REG_CONST)
# data[(27, 26)]: bit1: 'const_1' (REG_CONST)
# data[(29, 28)]: bit2: 'const_2' (REG_CONST)

00080205 00040020
# data[(5, 4)] : @ tile (2, 5) connect wire 2 (in_BUS16_S3_T2) to out_BUS16_S0_T2
# data[(19, 18)] : @ tile (2, 5) connect wire 1 (in_BUS16_S2_T4) to out_BUS16_S1_T4
# data[(25, 24)] : @ tile (2, 5) connect wire 0 (in_BUS16_S0_T2) to out_BUS16_S2_T2

00090205 00300000
# data[(21, 20)] : @ tile (2, 5) connect wire 3 (pe_out_res_p) to out_BUS1_S2_T0

F1000206 0000000C
# data[(15, 0)] : init `data1` reg with const `12`

FF000206 0003F00B
# data[ 5,  0] = 11 :: alu_op 'mult_0'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  3 :: data0  'reg_a' (REG_DELAY)
# data[19, 18] =  0 :: data1  'const_b' (REG_CONST)

00020206 00000002
# data[(3, 0)] : @ tile (2, 6) connect wire 2 (in_BUS16_S2_T2) to data0

00080206 03008000
# data[(15, 14)] : @ tile (2, 6) connect wire 2 (in_BUS16_S3_T2) to out_BUS16_S1_T2
# data[(25, 24)] : @ tile (2, 6) connect wire 3 (pe_out_res) to out_BUS16_S2_T2

00010210 40000000
# data[(31, 30)] : @ tile (2, 16) connect wire 1 (in_0_BUS16_S1_T0) to out_0_BUS16_S3_T0

FF000301 000AF000
# data[ 5,  0] =  0 :: alu_op 'add'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  2 :: data1  'wire_b' (REG_BYPASS)

00020301 00000008
# data[(3, 0)] : @ tile (3, 1) connect wire 8 (out_BUS16_S2_T3) to data0

00030301 00000006
# data[(3, 0)] : @ tile (3, 1) connect wire 6 (out_BUS16_S1_T1) to data1

00080301 080C0800
# data[(11, 10)] : @ tile (3, 1) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0
# data[(13, 12)] : @ tile (3, 1) connect wire 0 (in_BUS16_S0_T1) to out_BUS16_S1_T1
# data[(19, 18)] : @ tile (3, 1) connect wire 3 (pe_out_res) to out_BUS16_S1_T4
# data[(27, 26)] : @ tile (3, 1) connect wire 2 (in_BUS16_S3_T3) to out_BUS16_S2_T3

01080301 00000010
# data[(37, 36)] : @ tile (3, 1) connect wire 1 (in_BUS16_S1_T3) to out_BUS16_S3_T3

FF000302 000AF000
# data[ 5,  0] =  0 :: alu_op 'add'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  2 :: data1  'wire_b' (REG_BYPASS)

00020302 00000005
# data[(3, 0)] : @ tile (3, 2) connect wire 5 (out_BUS16_S2_T0) to data0

00030302 00000004
# data[(3, 0)] : @ tile (3, 2) connect wire 4 (in_BUS16_S1_T4) to data1

00080302 00082000
# data[(13, 12)] : @ tile (3, 2) connect wire 2 (in_BUS16_S3_T1) to out_BUS16_S1_T1
# data[(19, 18)] : @ tile (3, 2) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S1_T4
# data[(21, 20)] : @ tile (3, 2) connect wire 0 (in_BUS16_S0_T0) to out_BUS16_S2_T0
# data[(23, 22)] : @ tile (3, 2) connect wire 0 (in_BUS16_S0_T1) to out_BUS16_S2_T1

01080302 00000003
# data[(33, 32)] : @ tile (3, 2) connect wire 3 (pe_out_res) to out_BUS16_S3_T1

F1000303 00000011
# data[(15, 0)] : init `data1` reg with const `17`

FF000303 0002F00B
# data[ 5,  0] = 11 :: alu_op 'mult_0'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  0 :: data1  'const_b' (REG_CONST)

00020303 00000008
# data[(3, 0)] : @ tile (3, 3) connect wire 8 (out_BUS16_S2_T3) to data0

00080303 00B00000
# data[(21, 20)] : @ tile (3, 3) connect wire 3 (pe_out_res) to out_BUS16_S2_T0
# data[(23, 22)] : @ tile (3, 3) connect wire 2 (in_BUS16_S3_T1) to out_BUS16_S2_T1
# data[(27, 26)] : @ tile (3, 3) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S2_T3

00010304 08000000
# data[(27, 26)] : @ tile (3, 4) connect wire 2 (in_0_BUS16_S3_T3) to out_0_BUS16_S2_T3

F1000305 0000000B
# data[(15, 0)] : init `data1` reg with const `11`

FF000305 0003F00B
# data[ 5,  0] = 11 :: alu_op 'mult_0'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  3 :: data0  'reg_a' (REG_DELAY)
# data[19, 18] =  0 :: data1  'const_b' (REG_CONST)

00020305 00000009
# data[(3, 0)] : @ tile (3, 5) connect wire 9 (out_BUS16_S2_T4) to data0

00080305 2000C200
# data[(9, 8)] : @ tile (3, 5) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S0_T4
# data[(15, 14)] : @ tile (3, 5) connect wire 3 (pe_out_res) to out_BUS16_S1_T2
# data[(29, 28)] : @ tile (3, 5) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S2_T4

F1000306 0000000E
# data[(15, 0)] : init `data1` reg with const `14`

FF000306 0002F00B
# data[ 5,  0] = 11 :: alu_op 'mult_0'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  0 :: data1  'const_b' (REG_CONST)

00020306 00000004
# data[(3, 0)] : @ tile (3, 6) connect wire 4 (in_BUS16_S2_T4) to data0

00080306 00008C00
# data[(11, 10)] : @ tile (3, 6) connect wire 3 (pe_out_res) to out_BUS16_S1_T0
# data[(15, 14)] : @ tile (3, 6) connect wire 2 (in_BUS16_S3_T2) to out_BUS16_S1_T2

00010310 40000000
# data[(31, 30)] : @ tile (3, 16) connect wire 1 (in_0_BUS16_S1_T0) to out_0_BUS16_S3_T0

FF000401 000AF000
# data[ 5,  0] =  0 :: alu_op 'add'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  2 :: data1  'wire_b' (REG_BYPASS)

00020401 00000009
# data[(3, 0)] : @ tile (4, 1) connect wire 9 (out_BUS16_S2_T4) to data0

00030401 00000006
# data[(3, 0)] : @ tile (4, 1) connect wire 6 (out_BUS16_S1_T1) to data1

00080401 20000803
# data[(1, 0)] : @ tile (4, 1) connect wire 3 (pe_out_res) to out_BUS16_S0_T0
# data[(11, 10)] : @ tile (4, 1) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0
# data[(13, 12)] : @ tile (4, 1) connect wire 0 (in_BUS16_S0_T1) to out_BUS16_S1_T1
# data[(29, 28)] : @ tile (4, 1) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S2_T4

01080401 00000000
# data[(37, 36)] : @ tile (4, 1) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S3_T3

FF000402 000AF000
# data[ 5,  0] =  0 :: alu_op 'add'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  2 :: data1  'wire_b' (REG_BYPASS)

00020402 00000000
# data[(3, 0)] : @ tile (4, 2) connect wire 0 (in_BUS16_S2_T0) to data0

00030402 00000001
# data[(3, 0)] : @ tile (4, 2) connect wire 1 (in_BUS16_S1_T1) to data1

00080402 00883000
# data[(13, 12)] : @ tile (4, 2) connect wire 3 (pe_out_res) to out_BUS16_S1_T1
# data[(19, 18)] : @ tile (4, 2) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S1_T4
# data[(23, 22)] : @ tile (4, 2) connect wire 2 (in_BUS16_S3_T1) to out_BUS16_S2_T1
# data[(27, 26)] : @ tile (4, 2) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S2_T3

01080402 00000040
# data[(39, 38)] : @ tile (4, 2) connect wire 1 (in_BUS16_S1_T4) to out_BUS16_S3_T4

00080403 00000000
# data[(27, 26)] : @ tile (4, 3) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S2_T3

00010404 00000000
# data[(27, 26)] : @ tile (4, 4) connect wire 0 (in_0_BUS16_S0_T3) to out_0_BUS16_S2_T3

F1000405 00000000
# data[(15, 0)] : init `data1` reg with const `0`

FF000405 0002F000
# data[ 5,  0] =  0 :: alu_op 'add'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  0 :: data1  'const_b' (REG_CONST)

00020405 00000007
# data[(3, 0)] : @ tile (4, 5) connect wire 7 (out_BUS16_S2_T2) to data0

00080405 02030000
# data[(17, 16)] : @ tile (4, 5) connect wire 3 (pe_out_res) to out_BUS16_S1_T3
# data[(25, 24)] : @ tile (4, 5) connect wire 2 (in_BUS16_S3_T2) to out_BUS16_S2_T2
# data[(27, 26)] : @ tile (4, 5) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S2_T3

F1000406 00000000
# data[(15, 0)] : init `data1` reg with const `0`

FF000406 0002F00B
# data[ 5,  0] = 11 :: alu_op 'mult_0'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  0 :: data1  'const_b' (REG_CONST)

00020406 00000007
# data[(3, 0)] : @ tile (4, 6) connect wire 7 (out_BUS16_S2_T2) to data0

00080406 0E000800
# data[(11, 10)] : @ tile (4, 6) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0
# data[(25, 24)] : @ tile (4, 6) connect wire 2 (in_BUS16_S3_T2) to out_BUS16_S2_T2
# data[(27, 26)] : @ tile (4, 6) connect wire 3 (pe_out_res) to out_BUS16_S2_T3

00010410 40000000
# data[(31, 30)] : @ tile (4, 16) connect wire 1 (in_0_BUS16_S1_T0) to out_0_BUS16_S3_T0

F1000501 00000010
# data[(15, 0)] : init `data1` reg with const `16`

FF000501 0002F00B
# data[ 5,  0] = 11 :: alu_op 'mult_0'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  0 :: data1  'const_b' (REG_CONST)

00020501 00000005
# data[(3, 0)] : @ tile (5, 1) connect wire 5 (out_BUS16_S2_T0) to data0

00080501 0020000C
# data[(3, 2)] : @ tile (5, 1) connect wire 3 (pe_out_res) to out_BUS16_S0_T1
# data[(21, 20)] : @ tile (5, 1) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S2_T0

FF000502 000AF000
# data[ 5,  0] =  0 :: alu_op 'add'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  2 :: data1  'wire_b' (REG_BYPASS)

00020502 00000006
# data[(3, 0)] : @ tile (5, 2) connect wire 6 (out_BUS16_S2_T1) to data0

00030502 00000009
# data[(3, 0)] : @ tile (5, 2) connect wire 9 (out_BUS16_S1_T4) to data1

00080502 00880003
# data[(1, 0)] : @ tile (5, 2) connect wire 3 (pe_out_res) to out_BUS16_S0_T0
# data[(19, 18)] : @ tile (5, 2) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S1_T4
# data[(23, 22)] : @ tile (5, 2) connect wire 2 (in_BUS16_S3_T1) to out_BUS16_S2_T1

01080502 00000002
# data[(33, 32)] : @ tile (5, 2) connect wire 2 (in_BUS16_S2_T1) to out_BUS16_S3_T1
# data[(39, 38)] : @ tile (5, 2) connect wire 0 (in_BUS16_S0_T4) to out_BUS16_S3_T4

00080503 00000001
# data[(1, 0)] : @ tile (5, 3) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(29, 28)] : @ tile (5, 3) connect wire 0 (in_BUS16_S0_T4) to out_BUS16_S2_T4

00010504 00000001
# data[(1, 0)] : @ tile (5, 4) connect wire 1 (in_0_BUS16_S2_T0) to out_0_BUS16_S0_T0
# data[(29, 28)] : @ tile (5, 4) connect wire 0 (in_0_BUS16_S0_T4) to out_0_BUS16_S2_T4

FF000505 000AF000
# data[ 5,  0] =  0 :: alu_op 'add'
# data[ 6,  6] =  0 :: sign   'u'
# data[15, 12] = 15 :: flag   'pe'
# data[17, 16] =  2 :: data0  'wire_a' (REG_BYPASS)
# data[19, 18] =  2 :: data1  'wire_b' (REG_BYPASS)

00020505 00000008
# data[(3, 0)] : @ tile (5, 5) connect wire 8 (out_BUS16_S2_T3) to data0

00030505 00000005
# data[(3, 0)] : @ tile (5, 5) connect wire 5 (out_BUS16_S1_T0) to data1

00080505 38000001
# data[(1, 0)] : @ tile (5, 5) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(11, 10)] : @ tile (5, 5) connect wire 0 (in_BUS16_S0_T0) to out_BUS16_S1_T0
# data[(27, 26)] : @ tile (5, 5) connect wire 2 (in_BUS16_S3_T3) to out_BUS16_S2_T3
# data[(29, 28)] : @ tile (5, 5) connect wire 3 (pe_out_res) to out_BUS16_S2_T4

00080506 00200001
# data[(1, 0)] : @ tile (5, 6) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(21, 20)] : @ tile (5, 6) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S2_T0

00080507 00000001
# data[(1, 0)] : @ tile (5, 7) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00010508 00000001
# data[(1, 0)] : @ tile (5, 8) connect wire 1 (in_0_BUS16_S2_T0) to out_0_BUS16_S0_T0

00080509 00000001
# data[(1, 0)] : @ tile (5, 9) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

0008050A 00000001
# data[(1, 0)] : @ tile (5, 10) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

0008050B 00000001
# data[(1, 0)] : @ tile (5, 11) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

0001050C 00000001
# data[(1, 0)] : @ tile (5, 12) connect wire 1 (in_0_BUS16_S2_T0) to out_0_BUS16_S0_T0

0008050D 00000001
# data[(1, 0)] : @ tile (5, 13) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

0008050E 00000001
# data[(1, 0)] : @ tile (5, 14) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

0008050F 00000001
# data[(1, 0)] : @ tile (5, 15) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00010510 80000000
# data[(31, 30)] : @ tile (5, 16) connect wire 2 (in_0_BUS16_S2_T0) to out_0_BUS16_S3_T0

# INPUT  tile 257 ( 1, 1) / in_BUS16_S3_T0 / wire_0_1_BUS16_S1_T0
# OUTPUT tile 272 ( 1,16) / out_0_BUS16_S0_T0 / wire_1_16_BUS16_S0_T0

# WARNING You did not designate a 16-bit output bus, so I will build one: 
# Configuring side 0 (right side) io1bit tiles as 16bit output bus
00000111 00000001
00000211 00000001
00000311 00000001
00000411 00000001
00000511 00000001
00000611 00000001
00000711 00000001
00000811 00000001
00000911 00000001
00000A11 00000001
00000B11 00000001
00000C11 00000001
00000D11 00000001
00000E11 00000001
00000F11 00000001
00001011 00000001

