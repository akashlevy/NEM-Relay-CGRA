module  `mname`  #(
  parameter DataWidth = 16
) (
  input                  clk,
  input                  rst_n,

  input                  load,
  input  [DataWidth-1:0] val,

  input                  sel,

  input        [DataWidth-1:0] data_in,
  output logic [DataWidth-1:0] res
);

logic [DataWidth-1:0] data_in_reg;

always_ff @(posedge clk or negedge rst_n) begin
  if(~rst_n) begin
    data_in_reg <= 'h0;
  end else if(load) begin
    data_in_reg <= val;
  end else if(~sel) begin
    data_in_reg <= data_in;
  end
end

assign res = sel ? data_in : data_in_reg;

endmodule
